{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","WebAPI.js","components/Loading/Loading.js","pages/LoginPage/LoginPage.js","components/Pagination/Pagination.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","pages/PostPage/PostPage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPage.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","LoadingContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","Brand","NavBarList","Nav","Link","props","$active","LeftContainer","Header","location","useLocation","history","useHistory","useContext","user","setUser","pathname","to","onClick","push","BASE_URL","getPagination","page","limit","fetch","then","res","json","getMe","headers","authorization","LoadingContainer","Loading","ErrorMessage","LoginForm","form","LoginInput","LoginButton","button","LoginPage","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","isLoading","setIsLoading","onSubmit","e","method","body","JSON","stringify","login","data","ok","message","response","toString","value","onChange","target","type","PaginationContainer","PageButton","color","Pagination","pageCount","setPosts","currentPage","setCurrentPage","map","posts","handlePageClick","Root","PostContainer","PostTitle","PostDate","Post","post","id","title","Date","createdAt","toLocaleString","HomePage","setPageCount","useEffect","allPages","Math","ceil","length","Array","from","_","i","AboutContainer","AboutTitle","AboutContent","AboutPage","PostHeader","PostContent","PostPage","setPost","useParams","getPost","RegisterForm","RegisterInput","RegisterPage","nickname","setNickname","register","PostForm","SubmitButton","NewPostPage","setTitle","setBody","preventDefault","addPost","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAGaA,EAAcC,wBAAc,MAC5BC,EAAiBD,wBAAc,MCJtCE,EAAa,QAENC,EAAe,SAAAC,GACxB,OAAOC,aAAaC,QAAQJ,EAAYE,IAG/BG,EAAe,WACxB,OAAOF,aAAaG,QAAQN,I,2+BCDhC,IAAMO,EAAkBC,IAAOC,IAAV,KAcfC,EAAQF,IAAOC,IAAV,KAKLE,EAAaH,IAAOC,IAAV,KAMVG,EAAMJ,YAAOK,IAAPL,CAAH,KAUL,SAACM,GAAD,OACAA,EAAMC,SAAN,yCAMEC,EAAgBR,IAAOC,IAAV,IAKfE,GAKW,SAASM,IACtB,IAAMC,EAAWC,cACXC,EAAUC,cAFe,EAGPC,qBAAWzB,GAA5B0B,EAHwB,EAGxBA,KAAMC,EAHkB,EAGlBA,QAOb,OACE,eAACjB,EAAD,WACE,eAACS,EAAD,WACE,cAACN,EAAD,iCACA,eAACC,EAAD,WACE,cAACC,EAAD,CAAKG,QAA+B,MAAtBG,EAASO,SAAkBC,GAAG,IAA5C,0BAGA,cAACd,EAAD,CAAKG,QAA+B,WAAtBG,EAASO,SAAuBC,GAAG,SAAjD,gCAGCH,GACC,cAACX,EAAD,CAAKG,QAA+B,cAAtBG,EAASO,SAA0BC,GAAG,YAApD,4CAMN,eAACf,EAAD,YACIY,GACA,qCACE,cAACX,EAAD,CAAKG,QAA+B,WAAtBG,EAASO,SAAuBC,GAAG,SAAjD,0BAGA,cAACd,EAAD,CAAKG,QAA+B,cAAtBG,EAASO,SAA0BC,GAAG,YAApD,6BAKHH,GAAQ,cAACX,EAAD,CAAKe,QAlCpB,WACE1B,EAAa,IACbuB,EAAQ,MACRJ,EAAQQ,KAAK,MA+BA,gCC/FjB,IAAMC,EAAW,qCAcJC,EAAgB,SAACC,EAAMC,GAClC,OAAOC,MAAM,GAAD,OACPJ,EADO,wBACiBE,EADjB,mBACgCC,EADhC,iCAEVE,MAAK,SAACC,GAAD,OAAOA,EAAIC,WAiBPC,EAAQ,WACjB,IAAMnC,EAAQG,IACd,OAAO4B,MAAM,GAAD,OAAIJ,EAAJ,OAAmB,CAC7BS,QAAS,CACPC,cAAc,UAAD,OACDrC,MAEbgC,MAAK,SAACC,GAAD,OAASA,EAAIC,W,2RCzCzB,IAAMI,EAAmBhC,IAAOC,IAAV,KAcP,SAASgC,IACtB,OAAO,cAACD,EAAD,yB,6kBCTT,IAAME,EAAelC,IAAOC,IAAV,KAIZkC,EAAYnC,IAAOoC,KAAV,KAUTC,EAAarC,IAAOC,IAAV,KAQVqC,EAActC,IAAOuC,OAAV,KAOF,SAASC,IAAa,IAC5BxB,EAAYF,qBAAWzB,GAAvB2B,QAD2B,EAEFyB,mBAAS,IAFP,mBAE3BC,EAF2B,KAEjBC,EAFiB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,OAIMJ,mBAAS,IAJf,mBAI3BK,EAJ2B,KAIbC,EAJa,OAKEjC,qBAAWvB,GAAvCyD,EAL0B,EAK1BA,UAAWC,EALe,EAKfA,aACbrC,EAAUC,cAwBhB,OACE,eAACsB,EAAD,CAAWe,SAvBQ,SAAAC,GACnBJ,EAAgB,MAChBE,GAAa,GFzBI,SAACP,EAAUE,GAC5B,OAAOnB,MAAM,GAAD,OAAIJ,EAAJ,UAAsB,CAChC+B,OAAQ,OACRtB,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnBb,WACAE,eAGDlB,MAAK,SAACC,GAAD,OAASA,EAAIC,UEerB4B,CAAMd,EAAUE,GAAUlB,MAAK,SAAC+B,GAC9B,GAAe,IAAZA,EAAKC,GAEN,OADAT,GAAa,GACNF,EAAgBU,EAAKE,SAE9BlE,EAAagE,EAAK/D,OAClBmC,IAAQH,MAAK,SAAAkC,GACX,GAAmB,IAAhBA,EAASF,GAGV,OAFAjE,EAAa,MACbwD,GAAa,GACNF,EAAgBa,EAASC,YAElC7C,EAAQ4C,EAASH,MACjBR,GAAa,GACbrC,EAAQQ,KAAK,YAMjB,UACE,eAACiB,EAAD,WACE,4CACY,IACV,uBACEyB,MAAOpB,EACPqB,SAAU,SAACZ,GAAD,OAAOR,EAAYQ,EAAEa,OAAOF,aAG1C,4CACY,IACV,uBACEG,KAAK,WACLH,MAAOlB,EACPmB,SAAU,SAACZ,GAAD,OAAON,EAAYM,EAAEa,OAAOF,gBAI3Cd,EAAY,cAACf,EAAD,IAAc,cAACK,EAAD,2BAC1BQ,GAAgB,cAACZ,EAAD,UAAeY,O,6ZCnFtC,IAAMoB,EAAsBlE,IAAOC,IAAV,KAInBkE,EAAanE,IAAOuC,OAAV,KAQA,SAACjC,GAAD,OAAWA,EAAM8D,SAOlB,SAASC,EAAT,GAAoD,IAA9BC,EAA6B,EAA7BA,UAAW9C,EAAkB,EAAlBA,MAAO+C,EAAW,EAAXA,SAAW,EAC1B9B,mBAAS,GADiB,mBACzD+B,EADyD,KAC5CC,EAD4C,KAOhE,OACA,cAACP,EAAD,UACGI,EAAUI,KAAI,SAAAnD,GAAI,OACnB,cAAC4C,EAAD,CAEEC,MAAOI,IAAgBjD,EAAO,qBAAuB,qBACrDJ,QAAS,kBAVW,SAACI,GACvBD,EAAcC,EAAMC,GAAOE,MAAK,SAACiD,GAAD,OAAWJ,EAASI,MACpDF,EAAelD,GAQEqD,CAAgBrD,IAHjC,SAIEA,GAHKA,Q,miBC1BX,IAAMsD,EAAM7E,IAAOC,IAAT,KAKJ6E,GAAgB9E,IAAOC,IAAV,KAOb8E,GAAY/E,YAAOK,IAAPL,CAAH,KAMTgF,GAAWhF,IAAOC,IAAV,KAId,SAASgF,GAAT,GAAsB,IAAPC,EAAM,EAANA,KACb,OACE,eAACJ,GAAD,WACE,cAACC,GAAD,CAAW7D,GAAE,iBAAYgE,EAAKC,IAA9B,SAAqCD,EAAKE,QAC1C,cAACJ,GAAD,UAAW,IAAIK,KAAKH,EAAKI,WAAWC,sBAU3B,SAASC,KAAY,IAAD,EACG1E,qBAAWvB,GAAvCyD,EADyB,EACzBA,UAAWC,EADc,EACdA,aADc,EAEPR,mBAAS,IAFF,mBAE1BkC,EAF0B,KAEnBJ,EAFmB,OAGC9B,mBAAS,IAHV,mBAG1B6B,EAH0B,KAGfmB,EAHe,KAkBjC,OAZEC,qBAAU,WACRzC,GAAa,GJ9CRxB,MAAM,GAAD,OAAIJ,EAAJ,uCAAkDK,MAAK,SAACC,GAAD,OACjEA,EAAIC,UI8COF,MAAK,SAACiD,GACf,IAAMgB,EAAWC,KAAKC,KAAKlB,EAAMmB,OALzB,GAMRL,EAAaM,MAAMC,KAAK,CAAEF,OAAQH,IAAY,SAACM,EAAGC,GAAJ,OAAUA,EAAI,SAE9D5E,EAAc,EARJ,GAQcI,MAAK,SAACiD,GAC5BJ,EAASI,MAEX1B,GAAa,KACZ,CAACA,IAGJ,cAAC4B,EAAD,UACG7B,EAAa,cAACf,EAAD,IACZ,qCACD0C,EAAMD,KAAI,SAACQ,GAAD,OACT,cAACD,GAAD,CAAoBC,KAAMA,GAAfA,EAAKC,OAElB,cAACd,EAAD,CACEE,SAAUA,EACVD,UAAWA,EACX9C,MAxBQ,S,2rBC7CJxB,IAAOC,IAAT,MAAV,IAKMkG,GAAiBnG,IAAOC,IAAV,MAadmG,GAAapG,IAAOC,IAAV,MAOVoG,GAAerG,IAAOC,IAAV,MAIH,SAASqG,KACtB,OACE,eAACH,GAAD,WACE,cAACC,GAAD,iCACA,cAACC,GAAD,oF,stBC7BN,IAAMvB,GAAgB9E,IAAOC,IAAV,MAMbsG,GAAavG,IAAOC,IAAV,MAMV8E,GAAY/E,IAAOC,IAAV,MAOT+E,GAAWhF,IAAOC,IAAV,MAIRuG,GAAcxG,IAAOC,IAAV,MAKF,SAASwG,KAAY,IAAD,EACThE,mBAAS,IADA,mBAC1ByC,EAD0B,KACpBwB,EADoB,OAEG5F,qBAAWvB,GAAvCyD,EAFyB,EAEzBA,UAAWC,EAFc,EAEdA,aACbkC,EAAOwB,cAAPxB,GAQN,OANAO,qBAAU,WACRzC,GAAa,GN/BM,SAACkC,GACtB,OAAO1D,MAAM,GAAD,OAAIJ,EAAJ,qBAAyB8D,IAAMzD,MAAK,SAACC,GAAD,OAC9CA,EAAIC,UM8BJgF,CAAQzB,GAAIzD,MAAK,SAACwD,GAAD,OAAUwB,EAAQxB,EAAK,OACxCjC,GAAa,KACZ,CAACkC,EAAIlC,IAGN,+BACKD,GAAakC,EACf,eAAC,GAAD,WACC,eAACqB,GAAD,WACE,cAAC,GAAD,UAAYrB,EAAKE,QACjB,cAAC,GAAD,UAAW,IAAIC,KAAKH,EAAKI,WAAWC,sBAEtC,cAACiB,GAAD,UAActB,EAAK7B,UAElB,cAACpB,EAAD,M,qlBChDT,IAAMC,GAAelC,IAAOC,IAAV,MAIZ4G,GAAe7G,IAAOoC,KAAV,MAUZ0E,GAAgB9G,IAAOC,IAAV,MAObqC,GAActC,IAAOuC,OAAV,MAOF,SAASwE,KAAgB,IAC9B/F,EAAYF,qBAAWzB,GAAvB2B,QAD6B,EAELyB,mBAAS,IAFJ,mBAE9BC,EAF8B,KAEpBC,EAFoB,OAGLF,mBAAS,IAHJ,mBAG9BG,EAH8B,KAGpBC,EAHoB,OAILJ,mBAAS,IAJJ,mBAI9BuE,EAJ8B,KAIpBC,EAJoB,OAKGxE,mBAAS,IALZ,mBAK9BK,EAL8B,KAKhBC,EALgB,OAMDjC,qBAAWvB,GAAvCyD,EAN6B,EAM7BA,UAAWC,EANkB,EAMlBA,aACbrC,EAAUC,cAuBhB,OACE,eAACgG,GAAD,CAAc3D,SAtBK,SAAAC,GACnBJ,EAAgB,MAChBE,GAAa,GPDO,SAACP,EAAUsE,EAAUpE,GAC3C,OAAOnB,MAAM,GAAD,OAAIJ,EAAJ,aAAyB,CACnC+B,OAAQ,OACRtB,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnBb,WACAsE,WACApE,eAEDlB,MAAK,SAACC,GAAD,OAASA,EAAIC,UOTnBsF,CAASxE,EAAUsE,EAAUpE,GAAUlB,MAAK,SAAC+B,GAC3C,GAAgB,IAAZA,EAAKC,GAEP,OADAT,GAAa,GACNF,EAAgBU,EAAKE,SAE9BlE,EAAagE,EAAK/D,OAClBmC,IAAQH,MAAK,SAACkC,GACZ,GAAoB,IAAhBA,EAASF,GAGX,OAFAjE,EAAa,MACbwD,GAAa,GACNF,EAAgBa,EAASC,YAElC7C,EAAQ4C,EAASH,MACjBR,GAAa,GACbrC,EAAQQ,KAAK,YAKjB,UACE,eAAC0F,GAAD,WACE,4CACY,IACV,uBACEhD,MAAOpB,EACPqB,SAAU,SAACZ,GAAD,OAAOR,EAAYQ,EAAEa,OAAOF,aAG1C,4CACY,IACV,uBACEG,KAAK,OACLH,MAAOkD,EACPjD,SAAU,SAACZ,GAAD,OAAO8D,EAAY9D,EAAEa,OAAOF,aAG1C,4CACY,IACV,uBACEG,KAAK,WACLH,MAAOlB,EACPmB,SAAU,SAACZ,GAAD,OAAON,EAAYM,EAAEa,OAAOF,gBAI3Cd,EAAY,cAACf,EAAD,IAAc,cAAC,GAAD,2BAC1Ba,GAAgB,cAAC,GAAD,UAAeA,O,w8BCvFtC,IAAMqE,GAAWnH,IAAOoC,KAAV,MAKR0C,GAAgB9E,IAAOC,IAAV,MAmBbsG,GAAavG,IAAOC,IAAV,MASVmH,GAAepH,IAAOuC,OAAV,MAWZL,GAAelC,IAAOC,IAAV,MAIH,SAASoH,KAAe,IAAD,EACV5E,mBAAS,IADC,mBAC7B2C,EAD6B,KACtBkC,EADsB,OAEZ7E,mBAAS,IAFG,mBAE7BY,EAF6B,KAEvBkE,EAFuB,OAGI9E,mBAAS,IAHb,mBAG7BK,EAH6B,KAGfC,EAHe,OAIAjC,qBAAWvB,GAAvCyD,EAJ4B,EAI5BA,UAAWC,EAJiB,EAIjBA,aACbrC,EAAUC,cAchB,OACE,8BACE,eAACsG,GAAD,CAAUjE,SAdO,SAACC,GACpBA,EAAEqE,iBACFvE,GAAa,GRJM,SAACmC,EAAO/B,GAC7B,IAAM3D,EAAQG,IACd,OAAO4B,MAAM,GAAD,OAAIJ,EAAJ,UAAsB,CAChC+B,OAAQ,OACRtB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYrC,IAE3B2D,KAAMC,KAAKC,UAAU,CACnB6B,QACA/B,WAED3B,MAAK,SAACC,GAAD,OAASA,EAAIC,QQPnB6F,CAAQrC,EAAO/B,GAAM3B,MAAK,SAACC,GACzB,GAAe,IAAXA,EAAI+B,GAEN,OADAT,GAAa,GACNF,EAAgBpB,EAAIgC,SAE7BV,GAAa,GACbrC,EAAQQ,KAAK,SAKb,UACE,cAAC,GAAD,UACE,kEAEF,eAAC,GAAD,WACE,iDACA,uBACE6C,KAAK,OACLH,MAAOsB,EACPrB,SAAU,SAACZ,GAAD,OAAOmE,EAASnE,EAAEa,OAAOF,UAGrC,iDACA,0BACEA,MAAOT,EACPU,SAAU,SAACZ,GAAD,OAAOoE,EAAQpE,EAAEa,OAAOF,aAGrCd,EACC,cAACf,EAAD,IAEA,cAACmF,GAAD,uCAEDtE,GAAgB,cAAC,GAAD,UAAeA,S,4FClFxC,IAAM+B,GAAO7E,IAAOC,IAAV,MAmDKyH,OA/Cf,WAAgB,IAAD,EACWjF,mBAAS,MADpB,mBACN1B,EADM,KACAC,EADA,OAEqByB,oBAAS,GAF9B,mBAENO,EAFM,KAEKC,EAFL,KAcb,OAVAyC,qBAAU,WAEJ7F,KACFgC,IAAQH,MAAK,SAACkC,GACRA,EAASF,IACX1C,EAAQ4C,EAASH,WAItB,IAED,cAACpE,EAAYsI,SAAb,CAAsB7D,MAAO,CAAE/C,OAAMC,WAArC,SACE,cAAC,GAAD,UACE,cAAC,IAAD,UACE,eAACzB,EAAeoI,SAAhB,CAAyB7D,MAAO,CAAEd,YAAWC,gBAA7C,UACE,cAACxC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,IAAlB,SACE,cAACrC,GAAD,MAEF,cAAC,IAAD,CAAOqC,KAAK,SAAZ,SACE,cAACvB,GAAD,MAEF,cAAC,IAAD,CAAOuB,KAAK,YAAZ,SACE,cAACR,GAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,aAAZ,SACE,cAACpB,GAAD,MAEF,cAAC,IAAD,CAAOoB,KAAK,SAAZ,SACE,cAACrF,EAAD,MAEF,cAAC,IAAD,CAAOqF,KAAK,YAAZ,SACE,cAACd,GAAD,mBC9CDe,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtG,MAAK,YAAkD,IAA/CuG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.e6f9464d.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n// 透過 AuthContext 來取/拿值\r\nexport const AuthContext = createContext(null)\r\nexport const LoadingContext = createContext(null); ","const TOKEN_NAME = \"token\"\r\n\r\nexport const setAuthToken = token => {\r\n    return localStorage.setItem(TOKEN_NAME, token);\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n    return localStorage.getItem(TOKEN_NAME);\r\n}","import { useContext } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight:bold\n`\n\nconst NavBarList = styled.div`\n  display:flex; \n  align-items: center;\n  height: 64px;\n`\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n  background: rgba(0,0,0,0.1)\n  `}\n`;\n\nconst LeftContainer = styled.div`\n  display:flex;\n  align-items:center;\n\n  // 底下的 navbarList 才有 margin-left\n  ${NavBarList} {\n    margin-left: 32px;\n  }\n`\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const {user, setUser} = useContext(AuthContext);\n\n  function handleLogout() {\n    setAuthToken(\"\");\n    setUser(null);\n    history.push('/');\n  }\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>部落格</Brand>\n        <NavBarList>\n          <Nav $active={location.pathname === \"/\"} to=\"/\">\n            首頁\n          </Nav>\n          <Nav $active={location.pathname === \"/about\"} to=\"/about\">\n            關於我\n          </Nav>\n          {user && (\n            <Nav $active={location.pathname === \"/new-post\"} to=\"/new-post\">\n              發布文章\n            </Nav>\n          )}\n        </NavBarList>\n      </LeftContainer>\n      <NavBarList>\n        {!user && (\n          <>\n            <Nav $active={location.pathname === \"/login\"} to=\"/login\">\n              登入\n            </Nav>\n            <Nav $active={location.pathname === \"/register\"} to=\"/register\">\n              註冊\n            </Nav>\n          </>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavBarList>\n    </HeaderContainer>\n  );\n}\n\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getPosts = () => {\r\n    return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n      res.json()\r\n    );\r\n}\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getPagination = (page, limit) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\r\n  ).then((res)=>res.json())\r\n}\r\n\r\nexport const login = (username, password) => {\r\n    return fetch(`${BASE_URL}/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n}\r\n\r\nexport const getMe = () => {\r\n    const token = getAuthToken()\r\n    return fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        authorization:\r\n          `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json())\r\n}\r\n\r\nexport const register = (username, nickname, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      nickname,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n}\r\n\r\nexport const addPost = (title, body) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json);\r\n}","import styled from \"styled-components\";\n\nconst LoadingContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default function Loading() {\n  return <LoadingContainer>Loading...</LoadingContainer>;\n}\n\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {login, getMe} from \"../../WebAPI\"\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport Loading from \"../../components/Loading\";\n\nconst ErrorMessage = styled.div`\n  color:red;\n`\n\nconst LoginForm = styled.form`\n  margin: 50px auto;\n  width: 500px;\n  border: 1px solid #ccc;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nconst LoginInput = styled.div`\n\n  input{\n    border-radius:5px;\n    outline: none;\n  }\n`;\n\nconst LoginButton = styled.button`\n  width: 30%;\n  margin: 10px auto;\n  border-radius: 5px;\n  outline: none;\n`;\n\nexport default function LoginPage() {\n  const {setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const history = useHistory()\n\n  const handleSubmit = e => {\n    setErrorMessage(null)\n    setIsLoading(true)\n    login(username, password).then((data)=> {\n      if(data.ok === 0) {\n        setIsLoading(false)\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then(response => {\n        if(response.ok !== 1) {\n          setAuthToken(null)\n          setIsLoading(false);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        setIsLoading(false);\n        history.push(\"/\");\n\n      })\n    })\n  }\n  return (\n    <LoginForm onSubmit={handleSubmit}>\n      <LoginInput>\n        <div>\n          username:{\" \"}\n          <input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          password:{\" \"}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n      </LoginInput>\n      {isLoading ? <Loading /> : <LoginButton>登入</LoginButton>}\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </LoginForm>\n  );\n}","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getPagination } from \"../../WebAPI\";\n\nconst PaginationContainer = styled.div`\n  margin: 20px auto;\n  text-align: center;\n`;\nconst PageButton = styled.button`\n  border: 0.5px solid #ddd;\n  font-size: 16px;\n  padding: 5px 10px;\n  margin: 0 10px;\n  cursor: pointer;\n  border-radius: 8px;\n  outline: none;\n  background: ${(props) => props.color};\n  &:hover {\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n\n\nexport default function Pagination({ pageCount, limit, setPosts}) {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePageClick = (page) =>{\n    getPagination(page, limit).then((posts) => setPosts(posts))\n    setCurrentPage(page)\n  }\n  return (\n  <PaginationContainer>\n    {pageCount.map(page => (\n    <PageButton\n      key={page}\n      color={currentPage === page ? \"rgba(0, 0, 0, 0.4)\" : \"rgba(0, 0, 0, 0.1)\"}\n      onClick={() => handlePageClick(page)}\n    >{page}</PageButton>\n    ))}</PaginationContainer>\n  )\n}\n\n","import React, { useEffect, useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getPosts, getPagination } from \"../../WebAPI\";\nimport Pagination from \"../../components/Pagination\";\nimport { LoadingContext } from \"../../contexts\";\nimport Loading  from \"../../components/Loading\";\nconst Root =styled.div`\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0,12,34,0.2);\n  padding:16px;\n  display:flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`\nconst PostTitle = styled(Link)`\n  font-size:24px;\n  color: #333;\n  text-decoration:none;\n`\n\nconst PostDate = styled.div`\n  color: rgba(0,0,0,0.8);\n`\n\nfunction Post({post}){\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\n\nexport default function HomePage() {\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const [posts, setPosts] = useState([])\n  const [pageCount, setPageCount] = useState([]);\n  const limit = 5;\n  \n    useEffect(() => {\n      setIsLoading(true);\n      getPosts().then((posts) => {\n        const allPages = Math.ceil(posts.length / limit);\n        setPageCount(Array.from({ length: allPages }, (_, i) => i + 1));\n      });\n      getPagination(1, limit).then((posts) => {\n        setPosts(posts);\n      });\n      setIsLoading(false);\n    }, [setIsLoading]);\n\n  return (\n    <Root>\n      {isLoading ? (<Loading/>) :(\n        <>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <Pagination\n        setPosts={setPosts}\n        pageCount={pageCount}\n        limit={limit}\n      ></Pagination>\n      </>\n      )}\n    </Root>\n  );\n}\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root =styled.div`\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst AboutContainer = styled.div`\n  width:50%;\n  height: 500px;\n  display:flex;\n  flex-direction:column;\n  align-items:center;\n  margin:0 auto;\n  margin-top:30px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  background: rgba(0,0,0,0.1);\n  border-radius: 15px;\n`;\nconst AboutTitle = styled.div`\n  font-size: 32px;\n  font-weight:bolder;\n  color: #333;\n  margin-bottom: 10px;\n`;\n\nconst AboutContent = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport default function AboutPage() {\n  return (\n    <AboutContainer>\n      <AboutTitle>關於我</AboutTitle>\n      <AboutContent>利用 React 實作出的 SPA 部落格</AboutContent>\n    </AboutContainer>\n  );\n}\n\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getPost } from \"../../WebAPI\";\r\nimport { LoadingContext } from \"../../contexts\";\r\nimport Loading from \"../../components/Loading\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostContainer = styled.div`\r\n  width: 80%;\r\n  margin: 20px auto;\r\n  padding: 16px;\r\n`;\r\n\r\nconst PostHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-bottom: 1px solid #ccc;\r\n`\r\nconst PostTitle = styled.div`\r\n  font-size: 32px;\r\n  font-weight:bold;\r\n  color: #333;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  margin-top: 10px;\r\n  white-space: pre-line;\r\n  word-break: break-word;\r\n`;\r\nexport default function PostPage() {\r\n  const [post, setPost] = useState(\"\");\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getPost(id).then((post) => setPost(post[0]));\r\n    setIsLoading(false);\r\n  }, [id, setIsLoading]);\r\n\r\n  return (\r\n    <div>\r\n      {(!isLoading && post) ? \r\n      (<PostContainer>\r\n        <PostHeader>\r\n          <PostTitle>{post.title}</PostTitle>\r\n          <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n        </PostHeader>\r\n        <PostContent>{post.body}</PostContent>\r\n      </PostContainer>)\r\n      :( <Loading/>)}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { register, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport Loading from \"../../components/Loading\";\n\nconst ErrorMessage = styled.div`\n  color:red;\n`\n\nconst RegisterForm = styled.form`\n  margin: 50px auto;\n  width: 500px;\n  border: 1px solid #ccc;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nconst RegisterInput = styled.div`\n  input {\n    border-radius: 4px;\n    outline: none;\n  }\n`;\n\nconst LoginButton = styled.button`\n  width: 30%;\n  margin: 10px auto;\n  border-radius: 5px;\n  outline: none;\n`;\n\nexport default function RegisterPage() {\n  const { setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const history = useHistory()\n\n  const handleSubmit = e => {\n    setErrorMessage(null)\n    setIsLoading(true);\n    register(username, nickname, password).then((data) => {\n      if (data.ok === 0) {\n        setIsLoading(false);\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (response.ok === 0) {\n          setAuthToken(null);\n          setIsLoading(false);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        setIsLoading(false);\n        history.push(\"/\");\n      });\n    });\n  }\n  return (\n    <RegisterForm onSubmit={handleSubmit}>\n      <RegisterInput>\n        <div>\n          username:{\" \"}\n          <input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          nickname:{\" \"}\n          <input\n            type=\"text\"\n            value={nickname}\n            onChange={(e) => setNickname(e.target.value)}\n          />\n        </div>\n        <div>\n          password:{\" \"}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n      </RegisterInput>\n      {isLoading ? <Loading /> : <LoginButton>註冊</LoginButton>}\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </RegisterForm>\n  );\n}","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { addPost } from \"../../WebAPI\";\r\nimport { LoadingContext } from \"../../contexts\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst PostForm = styled.form`\r\n  margin: 20px auto 0 auto;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\r\n  width: 80%;\r\n`;\r\nconst PostContainer = styled.div`\r\n  margin: 20px auto;\r\n  padding: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  label {\r\n    margin: 10px 0;\r\n  }\r\n  input {\r\n    width: 30%;\r\n    padding: 5px 13px;\r\n  }\r\n  textarea {\r\n    height: 200px;\r\n    padding: 8px 13px;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst PostHeader = styled.div`\r\n  text-align:center;\r\n  border-bottom: 1px solid #ccc;\r\n\r\n  h1{\r\n    padding-top:15px;\r\n  }\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n  width: 200px;\r\n  margin: 16px;\r\n  text-align: center;\r\n\r\n  border-radius: 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color:red;\r\n`;\r\n\r\nexport default function NewPostPage() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    addPost(title, body).then((res) => {\r\n      if (res.ok !== 1) {\r\n        setIsLoading(false);\r\n        return setErrorMessage(res.message);\r\n      }\r\n      setIsLoading(false);\r\n      history.push(\"/\");\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <PostForm onSubmit={handleSubmit}>\r\n        <PostHeader>\r\n          <h1>發表新文章</h1>\r\n        </PostHeader>\r\n        <PostContainer>\r\n          <label>標題</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          ></input>\r\n\r\n          <label>內容</label>\r\n          <textarea\r\n            value={body}\r\n            onChange={(e) => setBody(e.target.value)}\r\n          ></textarea>\r\n        </PostContainer>\r\n        {isLoading ? (\r\n          <Loading/>\r\n        ) : (\r\n          <SubmitButton>送出文章</SubmitButton>\r\n        )}\r\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n      </PostForm>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../Header\";\nimport {\n  HomePage,\n  LoginPage,\n  PostPage,\n  AboutPage,\n  RegisterPage,\n  NewPostPage,\n} from \"../../pages\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\n\nconst Root = styled.div`\npadding-top:64px;\n`\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // 有 token 才 call api\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n            <Header />\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n              <Route path=\"/new-post\">\n                <NewPostPage />\n              </Route>\n              <Route path=\"/posts/:id\">\n                <PostPage />\n              </Route>\n              <Route path=\"/login\">\n                <LoginPage />\n              </Route>\n              <Route path=\"/Register\">\n                <RegisterPage />\n              </Route>\n            </Switch>\n          </LoadingContext.Provider>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}